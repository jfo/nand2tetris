// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t]==1) out[t+1] = 0
 * else if (load[t]==1)  out[t+1] = in[t]
 * else if (inc[t]==1)   out[t+1] = out[t] + 1  (integer addition)
 * else                  out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    /* if reset is true, load must also be true */
    /* but if load is true, reset needn't be true */
    /* HOLY SHIT THAT WAS A HARD ONE */

    Mux(a=load, b=false, sel=reset, out=loaded);

    Mux16(a=fromall, b=in, sel=loaded, out=fromloadmux);
    Register(in=fromloadmux, load=true, out=toall, out=out);

    Inc16(in=toall, out=frominc);
    Mux16(a=toall, b=frominc, sel=inc, out=fromincrementer);

    Mux16(a=fromincrementer, b=false, sel=reset, out=fromall);

}




