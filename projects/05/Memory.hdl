// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the computer's memory,
 * including RAM and memory mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load=1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output in the next time step.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];


    PARTS:

   /* wow, that was an awful one... it turns out the most significant bit gets the highest offest number? I am so confused about that. Still need to fix keyboard input placement in the chain... */

    And(a=load, b=address[14], out=loadsc);
    Not(in=address[14], out=notscreen);
    And(a=load, b=notscreen, out=loadm);

    DMux16(in=in, sel=address[14], a=toram, b=toscreen);

    Keyboard(out=fromkey, out[0..7]=hasinput1, out[8..15]=hasinput2);

    Or8Way(in=hasinput1, out=out1);
    Or8Way(in=hasinput2, out=out2);
    Or(a=out1, b=out2, out=input);

    RAM16K(in=toram, load=loadm, address=address[0..13], out=tomux1a);
    Screen(in=toscreen , load=loadsc, address=address[0..12], out=tomux1b);

    Mux16(a=tomux1a, b=tomux1b, sel=address[14], out=frommain);
    Mux16(a=frommain, b=fromkey, sel=input, out=out);

}
